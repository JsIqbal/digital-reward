definitions:
  rest.CreateUserProfileRequest:
    properties:
      businessLead:
        type: string
      businessName:
        type: string
      email:
        type: string
      kamName:
        type: string
      nid:
        type: string
      pocMobile:
        type: string
    required:
    - businessLead
    - businessName
    - email
    - nid
    - pocMobile
    type: object
  rest.CreateUserRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  rest.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  rest.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  rest.UserResponse:
    properties:
      user_id:
        type: string
      username:
        type: string
    type: object
  rest.loginResponse:
    properties:
      token:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/auth/sign-in:
    post:
      consumes:
      - application/json
      description: Log in as an user with a valid username and password
      parameters:
      - description: User login request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/rest.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.loginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Log in as an user
      tags:
      - user
  /api/auth/sign-up:
    post:
      consumes:
      - application/json
      description: Create a new user with a unique username and password
      parameters:
      - description: User creation request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/rest.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User created successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Create a new user
      tags:
      - user
  /api/test:
    get:
      consumes:
      - application/json
      description: Test the server by sending a request to this endpoint
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.SuccessResponse'
      summary: Test the server
      tags:
      - test
  /api/users/logout:
    post:
      consumes:
      - application/json
      description: Log out the user by removing the token cookie from the browser
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.SuccessResponse'
      summary: Log out the user
      tags:
      - user
  /api/users/profile:
    get:
      description: Retrieve the user's profile and associated user data.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get User Profile
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create a new user profile.
      parameters:
      - description: Authorization header
        in: header
        name: Authorization
        required: true
        type: string
      - description: User profile request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/rest.CreateUserProfileRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successfully created user profile
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      summary: Create user profile
      tags:
      - user
  /api/users/user:
    get:
      description: Get the details of the logged-in user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.UserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/rest.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Logged In User
      tags:
      - user
swagger: "2.0"
